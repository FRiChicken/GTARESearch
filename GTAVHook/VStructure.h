/*****************************************************************************\

Copyright (C) 2013-2014 <fri.developing at gmail dot com>

This software is provided 'as-is', without any express or implied
warranty.  In no event will the authors be held liable for any damages
arising from the use of this software.

Permission is granted to anyone to use this software for any purpose,
including commercial applications, and to alter it and redistribute it
freely, subject to the following restrictions:

1. The origin of this software must not be misrepresented; you must not
claim that you wrote the original software. If you use this software
in a product, an acknowledgment in the product documentation would be
appreciated but is not required.
2. Altered source versions must be plainly marked as such, and must not be
misrepresented as being the original software.
3. This notice may not be removed or altered from any source distribution.

\*****************************************************************************/

enum eVVehicleTypes {
	BICYCLE = 0,// 0
	CAR,		// 1
	QUADBIKE,	// 2
	BIKE,		// 3
	BOAT,		// 4
	TRAIN,		// 5
	HELI,		// 6
	PLANE,		// 7
	AUTOGYRO,	// 8
	SUBMARINE,	// 9
	TRAILER,	// 10
	BLIMP		// 11
};

enum eVBlips {
	BLIP_OTHPLAYER,
	BLIP_PROPCAT,
	BLIP_PLAYER,
	BLIP_DEST,
	BLIP_COP,
	BLIP_PICK,
	BLIP_GALLERY,
	BLIP_ENEMY,
	BLIP_CAR,
	BLIP_PICK_OBJ,
	BLIP_CONT,
	BLIP_FRIEND,
	BLIP_TREV,
	BLIP_MICHAEL,
	BLIP_FRANKLIN
};

enum eVRadarBlips {
	RADAR_DARTS = 0, // 0x70000 - 0x90000 = 2000 per blip(offset)
	RADAR_FBI_OFFICERS_STRAND,
	RADAR_CLOTHES_STORE,
	RADAR_TACO_VAN,
	RADAR_DRIVE_THRU,
	RADAR_STRIP_CLUB,
	RADAR_POLICE,
	RADAR_BIOLAB_HEIST,
	RADAR_RANDOM_CHARACTER,
	RADAR_FRANKLIN_FAMILIY,
	RADAR_AIR_HOCKY,
	RADAR_POOL,
	RADAR_HOSPITAL,
	RADAR_WEAPON_ASSAULT_RIFLE,
	RADAR_DOCKS_HEIST,
	RADAR_WEAPON_HEALTH,
	RADAR_CAR_WASH,
	RADAR_ARMENIAN_FAMILY,
	RADAR_WEAPON_SMG,
	RADAR_RAMPAGE,
	RADAR_VIENWOOD_TOURS,
	RADAR_POLICE_STATION,
	RADAR_INTERNET_CAFE,
	RADAR_FIRE_DEPARTMENT,
	RADAR_TREVOR_FAMILY_EXIL,
	RADAR_CRIM_DRUGS,
	RADAR_FIRE,
	RADAR_TENNIS,
	RADAR_ASSASSISN_MARK,
	RADAR_DRAG_RACE_FINISH,
	RADAR_WEAPON_UP,
	RADAR_WEAPON_DOWN,
	RADAR_BOMB_C,
	RADAR_RURAL_BANK_HEIST,
	RADAR_STATION,
	RADAR_BAR,
	RADAR_NORTH,
	RADAR_SAVEHOUSE,
	RADAR_FINALE_BANK_HEIST,
	RADAR_WEAPON_MOLOTOV,
	RADAR_WEAPON_GRENADES,
	RADAR_FENCE,
	RADAR_LEVEL,
	RADAR_WEAPON_KNIFE,
	RADAR_CRIM_PLAYER,
	RADAR_JIMMY,
	RADAR_POLICE_HELI,
	RADAR_HELICOPTER,
	RADAR_TATTOO,
	RADAR_LESTER_FAMILY,
	RADAR_COP_PATROL,
	RADAR_WEAPON_BAT,
	RADAR_REPO,
	RADAR_BOWLIGN,
	RADAR_RANDOM_MALE,
	RADAR_BOMB_A,
	RADAR_SHOOTIGN_RANGE,
	RADAR_ILLEGAL_PARLING,
	RADAR_TREVOR_FAMILY,
	RADAR_CRIM_HOLDUPS,
	RADAR_POLICE_CHASE,
	RADAR_FLIGHT_SCHOOL,
	RADAR_NIGHTCLUB,
	RADAR_OBJECTIVE_HIGHER,
	RADAR_SNITCH,
	RADAR_RANDOM_FEMALE,
	RADAR_HEIST,
	RADAR_HIGHER,
	RADAR_WEAPON_PISTOL,
	RADAR_CRIM_WANTED,
	RADAR_JEWELRY_HEIST,
	RADAR_CRIM_ARREST,
	RADAR_SOLOMON_STRAND,
	RADAR_BOMB_B,
	RADAR_BASE_JUIMP,
	RADAR_BURGER_SHOT,
	RADAR_GYM,
	RADAR_TOWTRUCK,
	RADAR_NICE_HOUSE_HEIST,
	RADAR_WEAPON_ROCKET,
	RADAR_MICHAEL_FAMILY,
	RADAR_BARBER,
	RADAR_CHINESE_STRAND,
	RADAR_FINANCIER_STRAND,
	RADAR_OBJECTIVE_LOWER,
	RADAR_WEAPON_SHOTGUN,
	RADAR_TRIATHLON,
	RADAR_COP_PLAYER,
	RADAR_CLUCKING_BELL,
	RADAR_SECURITYVAN,
	RADAR_CRIM_CARSTEAL,
	RADAR_CAR_ARRIER,
	RADAR_RESTAURANT,
	RADAR_CENTRE,
	RADAR_MICHAEL_TREVOR_FAMILIY,
	RADAR_PLANNIGN_LOCATIONS,
	RADAR_MICHAEL_FAMILY_EXILE,
	RADAR_SKI_LIFT,
	RADAR_ACTIVITIES,
	RADAR_RACEFLAG,
	RADAR_WEAPON_SNIPER,
	RADAR_GOLF,
	RADAR_ELEVATOR,
	RADAR_GUN_SHOP,
	RADAR_FBI_HEIST,
	RADAR_CABARET_CLUB,
	RADAR_EYE_SKY,
	RADAR_OBJECTIVE,
	RADAR_CABLE_CAR,
	RADAR_JOYRIDERS,
	RADAR_DRAG_RACE,
	RADAR_LOWER,
	RADAR_BASKETBALL,
	RADAR_CRIM_PIMPIGN,
	RADAR_WEAPON_ARMOUR,
	RADAR_CAR_MOD_SHOP,
	RADAR_COMEDY_CLUB,
	RADAR_WAYPOINT,
	RADAR_VEHICLE_SPAWN,
	RADAR_LAMAR_FAMILY
};

enum eVPickups {
	PICKUP_WEAPON_BULLPUPSHOTGUN,
	PICKUP_WEAPON_ASSAULTSMG,
	PICKUP_VEHICLE_WEAPON_ASSAULTSMG,
	PICKUP_WEAPON_PISTOL50,
	PICKUP_VEHICLE_WEAPON_PISTOL50,
	PICKUP_AMMO_BULLET_MP,
	PICKUP_AMMO_MISSILE_MP,
	PICKUP_AMMO_GRENADELAUNCHER_MP,
	PICKUP_WEAPON_ASSAULTRIFLE,
	PICKUP_WEAPON_CARBINERIFLE,
	PICKUP_WEAPON_ADVANCEDRIFLE,
	PICKUP_WEAPON_MG,
	PICKUP_WEAPON_COMBATMG,
	PICKUP_WEAPON_SNIPERRIFLE,
	PICKUP_WEAPON_HEAVYSNIPER,
	PICKUP_WEAPON_MICROSMG,
	PICKUP_WEAPON_SMG,
	PICKUP_ARMOUR_STANDARD,
	PICKUP_WEAPON_RPG,
	PICKUP_WEAPON_MINIGUN,
	PICKUP_HEALTH_STANDARD,
	PICKUP_WEAPON_PUMPSHOTGUN,
	PICKUP_WEAPON_SAWNOFFSHOTGUN,
	PICKUP_WEAPON_ASSAULTSHOTGUN,
	PICKUP_WEAPON_GRENADE,
	PICKUP_WEAPON_MOLOTOV,
	PICKUP_WEAPON_SMOKEGRENADE,
	PICKUP_WEAPON_STICKYBOMB,
	PICKUP_WEAPON_PISTOL,
	PICKUP_WEAPON_COMBATPISTOL,
	PICKUP_WEAPON_APPISTOL,
	PICKUP_WEAPON_GRENADELAUNCHER,
	PICKUP_MONEY_VARIABLE,
	PICKUP_WEAPON_STUNGUN,
	PICKUP_WEAPON_FIREEXTINGUISHER,
	PICKUP_WEAPON_PETROLCAN,
	PICKUP_WEAPON_KNIFE,
	PICKUP_WEAPON_NIGHTSTICK,
	PICKUP_WEAPON_HAMMER,
	PICKUP_WEAPON_BAT,
	PICKUP_WEAPON_GolfClub,
	PICKUP_WEAPON_CROWBAR,
	PICKUP_HANDCUFF_KEY,
	PICKUP_CUSTOM_SCRIPT,
	PICKUP_CAMERA,
	PICKUP_PORTABLE_PACKAGE,
	PICKUP_PORTABLE_CRATE_UNFIXED,
	PICKUP_MONEY_CASE,
	PICKUP_MONEY_WALLET,
	PICKUP_MONEY_PURSE,
	PICKUP_MONEY_DEP_BAG,
	PICKUP_MONEY_MED_BAG,
	PICKUP_MONEY_PAPER_BAG,
	PICKUP_MONEY_SECURITY_CASE,
	PICKUP_VEHICLE_WEAPON_COMBATPISTOL,
	PICKUP_VEHICLE_WEAPON_APPISTOL,
	PICKUP_VEHICLE_WEAPON_PISTOL,
	PICKUP_VEHICLE_WEAPON_GRENADE,
	PICKUP_VEHICLE_WEAPON_MOLOTOV,
	PICKUP_VEHICLE_WEAPON_SMOKEGRENADE,
	PICKUP_VEHICLE_WEAPON_STICKYBOMB,
	PICKUP_VEHICLE_HEALTH_STANDARD,
	PICKUP_VEHICLE_ARMOUR_STANDARD,
	PICKUP_VEHICLE_WEAPON_MICROSMG,
	PICKUP_VEHICLE_WEAPON_SMG,
	PICKUP_VEHICLE_WEAPON_SAWNOFF,
	PICKUP_VEHICLE_CUSTOM_SCRIPT,
	PICKUP_VEHICLE_MONEY_VARIABLE,
	PICKUP_SUBMARINE,
	PICKUP_HEALTH_SNACK,
	PICKUP_PARACHUTE,
	PICKUP_AMMO_PISTOL,
	PICKUP_AMMO_SMG,
	PICKUP_AMMO_RIFLE,
	PICKUP_AMMO_MG,
	PICKUP_AMMO_SHOTGUN,
	PICKUP_AMMO_SNIPER,
	PICKUP_AMMO_GRENADELAUNCHER,
	PICKUP_AMMO_RPG,
	PICKUP_AMMO_MINIGUN
};

enum eVPlayerSwitch {
	SWITCH_TYPE_AUTO,
	SWITCH_TYPE_LONG,
	SWITCH_TYPE_MEDIUM,
	SWITCH_TYPE_SHORT
};

enum eVPlayerSwitchEstablishingShotMetadataStore {
	v_trailer,
	v_trevors,
	v_trevors_2,
	v_lesters,
	v_franklins,
	v_franklins_2,
	v_franklinshouse,
	v_franklinshouse_2,
	v_franklinshouse_3,
	v_franklinshouse_4,
	v_strip3,
	v_strip3_2,
	v_chopshop,
	v_michael,
	v_michael_2,
	v_methlab,
	v_PRFTa_FRANKLIN1a,
	v_PRFTa_FRANKLIN1c,
	v_PRFTa_FRANKLIN1d,
	v_PRFTa_FRANKLIN1e,
	v_PRM2_SAVEHOUSE1_b,
	v_PRT_FIGHTCASINO,
	v_PRT6_SMOKECRYSTAL,
	v_PRT6_METHLAB,
	v_PRM2_DROPOFFDAU_a,
	v_PRM2_DROPOFFSON_a,
	v_PRM2_DROPOFFSON_b,
	v_PRM2_DROPOFFDAU_b,
	v_PRM6_DRINKINGBEER,
	v_PRM6_HOUSEBED,
	v_PRM6_HOUSETV_a,
	v_PRM6_MORNING_a,
	v_PRM6_DEPRESSED,
	v_PRM6_ONPHONE,
	v_PRM4_LUNCH_b,
	v_PRM2_SAVEHOUSE1_a,
	v_PRM_S_FAMILY4,
	v_PRT_FIGHTYAUCLUB_b,
	v_PRT_FIGHTBAR_a,
	v_PRT_FIGHTBAR_b,
	v_PRT_FIGHTBAR_c,
	v_PRT6_TRAF_AIR,
	v_PRT6_LAKE,
	v_PRT6_HUNTING2,
	v_PRT6_HUNTING1,
	v_PRT6_HUNTING3,
	v_PRT_CN_PIER,
	v_PRT_CN_WAKETRAIN,
	v_PRM_BENCHCALL_a,
	v_PRM_BENCHCALL_b,
	v_PRT_CN_WAKETRASH_b,
	v_PRT_SC_ALLEYDRUNK,
	v_PRT_NAKED_GARDEN,
	v_PRT_CN_CHATEAU_b,
	v_PRT_CN_CHATEAU_c,
	v_PRT_CR_CHATEAU_d,
	v_PRT_CR_WAKEBEACH,
	v_PRT_CN_WAKEBARN,
	v_PRT_CR_WAKEROOFTOP,
	v_PRT_CN_WAKEMOUNTAIN,
	v_PRF_KUSH_DOC_b,
	v_PRF_KUSH_DOC_c
};

enum eVMapTypes {
	MAP_VISLOW,
	MAP_VISHIGH,
	MAP_GOLF,
	MAP_INTERIOR,
	MAP_CANSTARTMISS,
	MAP_CANDROPPOI,
	MAP_CANZOOM,
	MAP_WAYPOINT,
	MAP_CANWARP
};

enum eVPedModels {
	GTAV_MP_PLAYER
};

enum eVStreamerPrioritys {
	/* **NOT SURE**
	LOWEST_12
	LOWEST_11
	LOWEST_10
	LOWEST_9
	LOWEST_8
	LOWEST_7
	LOWEST_6
	LOWEST_5
	LOWEST_4
	LOWEST_3
	LOWEST_2
	LOWEST_1
	HIGHEST_1
	HIGHEST_2
	HIGHEST_3
	HIGHEST_4
	HIGHEST_5
	HIGHEST_6
	HIGHEST_7
	HIGHEST_8
	HIGHEST_9
	HIGHEST_10
	HIGHEST_11
	HIGHEST_12
	TIME_CRITICAL
	*/
	PRIO_LOWEST,
	PRIO_BELOW_NORMAL,
	PRIO_NORMAL,
	PRIO_IDLE,
	PRIO_ABOVE_NORMAL,
	PRIO_HIGHEST
};

enum eVMovementModeUnholsterData {
	UNHOLSTER_UNARMED,
	UNHOLSTER_2H_MELEE,
	UNHOLSTER_1H,
	UNHOLSTER_2H,
	UNHOLSTER_MINIGUN,
	UNHOLSTER_UNARMED_STEALTH,
	UNHOLSTER_2H_MELEE_STEALTH,
	UNHOLSTER_1H_STEALTH,
	UNHOLSTER_2H_STEALTH
};

enum eVMovementModes {
	DEFAULT_ACTION,
	MP_FEMALE_ACTION,
	MICHAEL_ACTION,
	FRANKLIN_ACTION,
	TREVOR_ACTION
};

enum eVWeapons {
	WEAPON_UNARMED,
	WEAPON_GRENADE,
	WEAPON_SMOKEGRENADE,
	WEAPON_STICKYBOMB,
	WEAPON_MOLOTOV,
	WEAPON_LOUDHAILER,
	WEAPON_KNIFE,
	WEAPON_NIGHTSTICK,
	WEAPON_HAMMER,
	WEAPON_CROWBAR,
	WEAPON_FLARE,
	WEAPON_BAT,
	WEAPON_GOLFCLUB,
	WEAPON_PISTOL,
	WEAPON_COMBATPISTOL,
	WEAPON_PISTOL50,
	WEAPON_APPISTOL,
	WEAPON_MICROSMG,
	WEAPON_RUBBERGUN,
	WEAPON_STUNGUN,
	WEAPON_SMG,
	WEAPON_ASSAULTSMG,
	WEAPON_ASSAULTRIFLE,
	WEAPON_CARBINERIFLE,
	WEAPON_HEAVYRIFLE,
	WEAPON_ADVANCEDRIFLE,
	WEAPON_MG,
	WEAPON_COMBATMG,
	WEAPON_ASSAULTMG,
	WEAPON_PUMPSHOTGUN,
	WEAPON_SAWNOFFSHOTGUN,
	WEAPON_BULLPUPSHOTGUN,
	WEAPON_ASSAULTSHOTGUN,
	WEAPON_SNIPERRIFLE,
	WEAPON_ASSAULTSNIPER,
	WEAPON_PROGRAMMABLEAR,
	WEAPON_HEAVYSNIPER,
	WEAPON_GRENADELAUNCHER,
	WEAPON_MINIGUN
};

enum eVThrownWeapons {
	CJ_PROC_TIN,
	CJ_PROC_TIN3,
	CJ_PROC_BRICK,
	CJ_PROC_BRICK4,
	CJ_PROC_BRICK5,
	CJ_PROC_BRICK6,
	CJ_PROC_BS_CUP,
	CJ_PROC_COFFEE1,
	BM_burgershot_burg2,
	CJ_PROC_BEER_1,
	CJ_PROC_BEER_2
};

enum eVTimes {
	NIGHT = 0,
	MORNING = 7,
	AFTERNOON = 12,
	EVENING = 18
};

enum eVTVPlaylist {
	CNT_PROMO1,
	CNT_SHOW1,
	CNT_ADVERT1,
	CNT_ADVERT3,
	CNT_ADVERT2,

	// To be continued..
};

enum eVDamageAndReaction {
	DAR_counter,
	DAR_counter_armed,
	DAR_dodge,
	DAR_shove,
	DAR_heavy,
	DAR_heavy_cardinal,
	DAR_dog_bite,
	DAR_cougar_attack,
	DAR_knife,
	DAR_bat,
	DAR_small_wpn,
	DAR_stealth_kill,
	DAR_kill_self_head,
	DAR_kill_self_neck,
	DAR_kill_self_spine_1,
	DAR_kill_self_pelvis,
	DAR_knockout,
	DAR_stomp,
	DAR_kick_surface,
	DAR_armed_melee,
	DAR_special_ability_recharge
};

enum eVStealthKills {
	SKT_a,
	SKT_weapon,
	SKT_b,
	SKT_c,
	SKT_d,
	SKT_armed
};

enum eVCrimeInfo {
	STEALING_VEHICLE
};

enum eVFiringPatternInfos {
	FIRING_PATTERN_BURST_FIRE,
	FIRING_PATTERN_BURST_FIRE_IN_COVER,
	FIRING_PATTERN_BURST_FIRE_DRIVEBY,
	FIRING_PATTERN_FROM_GROUND,
	FIRING_PATTERN_DELAY_FIRE_BY_ONE_SEC,
	FIRING_PATTERN_FULL_AUTO,
	FIRING_PATTERN_SINGLE_SHOT,
	FIRING_PATTERN_BURST_FIRE_PISTOL,
	FIRING_PATTERN_BURST_FIRE_SMG,
	FIRING_PATTERN_BURST_FIRE_RIFLE,
	FIRING_PATTERN_BURST_FIRE_MG,
	FIRING_PATTERN_BURST_FIRE_PUMPSHOTGUN,
	FIRING_PATTERN_BURST_FIRE_HELI,
	FIRING_PATTERN_BURST_FIRE_MICRO,
	FIRING_PATTERN_SHORT_BURSTS,
	FIRING_PATTERN_SLOW_FIRE_TANK
};

enum eVPedMotivationInfos {
	PED_MOTIVATION_TYPE_DEFAULT,
	PED_MOTIVATION_TYPE_HAPPY,
	PED_MOTIVATION_TYPE_SAD,
	PED_MOTIVATION_TYPE_ANGRY,
	PED_MOTIVATION_TYPE_SCARED
};

enum eVScriptedGunTaskMetadata {
	SCRIPTED_GUN_TASK_ON_CRATE,
	SCRIPTED_GUN_TASK_HANGING_UPSIDE_DOWN,
	SCRIPTED_GUN_TASK_ON_ROPE,
	SCRIPTED_GUN_TASK_PRONE_BACK,
	SCRIPTED_GUN_TASK_DINGY_RPG,
	SCRIPTED_GUN_TASK_CRATE_RPG,
	SCRIPTED_GUN_TASK_CRATE_BUDDY,
	SCRIPTED_GUN_TASK_PRONE_BACK_RIFLE,
	SCRIPTED_GUN_TASK_PLANE_WING,
	SCRIPTED_GUN_TASK_WRITHE,
	SCRIPTED_GUN_TASK_BIKE
};

enum eVVehicleMetadata {
	DEFAULT_ANIM_RATE_SET,
	STD_LOW_ANIM_RATE_SET,
	BOAT_ANIM_RATE_SET,
	LAZER_ANIM_RATE_SET
};

enum eVVehicleClipSetMaps {
	COMMON_CLIPSET_MAP_BICYCLE_LEFT,
	COMMON_CLIPSET_MAP_BICYCLE_RIGHT,
	COMMON_CLIPSET_MAP_BIKE_LEFT

	// To be continued..
};

enum eVWeaponAnimations {
	ANIM_WEAPON_ADVANCEDRIFLE,
	ANIM_WEAPON_ASSAULTRIFLE,
	ANIM_WEAPON_ASSAULTSHOTGUN,
	ANIM_WEAPON_ASSAULTSMG,
	ANIM_WEAPON_BULLPUPSHOTGUN,
	ANIM_WEAPON_CARBINERIFLE,
	ANIM_WEAPON_COMBATMG,
	ANIM_WEAPON_GRENADELAUNCHER,
	ANIM_WEAPON_GRENADELAUNCHER_SMOKE,
	ANIM_WEAPON_HEAVYSNIPER,
	ANIM_WEAPON_MG,
	ANIM_WEAPON_PUMPSHOTGUN,
	ANIM_WEAPON_RPG,
	ANIM_WEAPON_SAWNOFFSHOTGUN,
	ANIM_WEAPON_SMG,
	ANIM_WEAPON_SNIPERRIFLE,
	ANIM_WEAPON_STINGER,
	ANIM_WEAPON_MINIGUN,
	ANIM_GADGET_NIGHTVISION,
	ANIM_GADGET_PARACHUTE,
	ANIM_VEHICLE_WEAPON_ENEMY_LASER,
	ANIM_VEHICLE_WEAPON_PLAYER_BULLET,
	ANIM_VEHICLE_WEAPON_PLAYER_BUZZARD,
	ANIM_VEHICLE_WEAPON_PLAYER_HUNTER,
	ANIM_VEHICLE_WEAPON_PLAYER_LASER,
	ANIM_VEHICLE_WEAPON_PLAYER_LAZER,
	ANIM_VEHICLE_WEAPON_SEARCHLIGHT,
	ANIM_VEHICLE_WEAPON_SPACE_ROCKET,
	ANIM_VEHICLE_WEAPON_TANK,
	ANIM_WEAPON_ANIMAL,
	ANIM_WEAPON_APPISTOL,
	ANIM_WEAPON_BALL,
	ANIM_WEAPON_BARBED_WIRE,
	ANIM_WEAPON_BAT,
	ANIM_WEAPON_BLEEDING,
	ANIM_WEAPON_BRIEFCASE,
	ANIM_WEAPON_BRIEFCASE_02,
	ANIM_WEAPON_BZGAS,
	ANIM_WEAPON_COMBATPISTOL,
	ANIM_WEAPON_COUGAR,
	ANIM_WEAPON_CROWBAR,
	ANIM_WEAPON_DIGISCANNER,
	ANIM_WEAPON_DROWNING,
	ANIM_WEAPON_DROWNING_IN_VEHICLE,
	ANIM_WEAPON_ELECTRIC_FENCE,
	ANIM_WEAPON_EXPLOSION,
	ANIM_WEAPON_FALL,
	ANIM_WEAPON_FIRE,
	ANIM_WEAPON_FIREEXTINGUISHER,
	ANIM_WEAPON_FLARE,
	ANIM_WEAPON_GOLFCLUB,
	ANIM_WEAPON_GRENADE,
	ANIM_WEAPON_HAMMER,
	ANIM_WEAPON_HELI_CRASH,
	ANIM_WEAPON_HIT_BY_WATER_CANNON,
	ANIM_WEAPON_KNIFE,
	ANIM_WEAPON_MICROSMG,
	ANIM_WEAPON_MOLOTOV,
	ANIM_WEAPON_PASSENGER_ROCKET,
	ANIM_WEAPON_PETROLCAN,
	ANIM_WEAPON_PISTOL,
	ANIM_WEAPON_PISTOL50,
	ANIM_WEAPON_RAMMED_BY_CAR,
	ANIM_WEAPON_REMOTESNIPER,
	ANIM_WEAPON_RUN_OVER_BY_CAR,
	ANIM_WEAPON_SMOKEGRENADE,
	ANIM_WEAPON_STICKYBOMB,
	ANIM_WEAPON_STUNGUN,
	ANIM_WEAPON_UNARMED
};

enum eVWeaponSlots {
	SLOT_UNARMED = 10,
	SLOT_KNIFE = 20,
	SLOT_NIGHTSTICK = 30,
	SLOT_HAMMER = 40,
	SLOT_BAT = 50,
	SLOT_CROWBAR = 60,
	SLOT_GOLFCLUB = 70,
	SLOT_PISTOL = 90,
	SLOT_COMBATPISTOL = 100,
	SLOT_PISTOL50 = 110,
	SLOT_APPISTOL = 120,
	SLOT_STUNGUN = 130,
	SLOT_MICROSMG = 140,
	SLOT_SMG = 150,
	SLOT_ASSAULTSMG = 160,
	SLOT_ASSAULTRIFLE = 170,
	SLOT_CARBINERIFLE = 180,
	SLOT_ADVANCEDRIFLE = 200,
	SLOT_MG = 210,
	SLOT_COMBATMG = 220,
	SLOT_PUMPSHOTGUN = 250,
	SLOT_SAWNOFFSHOTGUN = 260,
	SLOT_BULLPUPSHOTGUN = 270,
	SLOT_ASSAULTSHOTGUN = 280,
	SLOT_SNIPERRIFLE = 290,
	SLOT_HEAVYSNIPER = 310,
	SLOT_GRENADELAUNCHER = 330,
	SLOT_RPG = 340,
	SLOT_PASSENGER_ROCKET = 342,
	SLOT_STINGER = 345,
	SLOT_MINIGUN = 350,
	SLOT_GRENADE = 360,
	SLOT_STICKYBOMB = 370,
	SLOT_SMOKEGRENADE = 380,
	SLOT_BZGAS = 390,
	SLOT_MOLOTOV = 400,
	SLOT_FIREEXTINGUISHER = 410,
	SLOT_PETROLCAN = 420,
	SLOT_BALL = 440,
	SLOT_FLARE = 445
};

enum eVVehicleWeaponInfos {
	VEHICLE_DATA_TANK,
	VEHICLE_DATA_SPACE_ROCKET,
	VEHICLE_DATA_PLAYER_LASER,
	VEHICLE_DATA_PLAYER_BULLET,
	VEHICLE_DATA_ENEMY_LASER,
	VEHICLE_DATA_SEARCHLIGHT
};

enum eVInputOnFoot {
	INPUT_NEXT_CAMERA,
	INPUT_LOOK_LR,
	INPUT_LOOK_UD,
	INPUT_LOOK_UP_ONLY,
	INPUT_LOOK_DOWN_ONLY,
	INPUT_LOOK_LEFT_ONLY,
	INPUT_LOOK_RIGHT_ONLY,
	INPUT_CINEMATIC_SLOWMO,
	INPUT_SCRIPTED_FLY_UD,
	INPUT_SCRIPTED_FLY_LR,
	INPUT_SCRIPTED_FLY_ZUP,
	INPUT_SCRIPTED_FLY_ZDOWN,
	INPUT_CHARACTER_WHEEL,
	INPUT_MULTIPLAYER_INFO,
	INPUT_WEAPON_WHEEL_UD,
	INPUT_WEAPON_WHEEL_LR,
	INPUT_WEAPON_WHEEL_NEXT,
	INPUT_WEAPON_WHEEL_PREV,
	INPUT_SELECT_NEXT_WEAPON,
	INPUT_SELECT_PREV_WEAPON,

	//<!--PC Specific-->
	INPUT_MAP,
	INPUT_SELECT_WEAPON_UNARMED,
	INPUT_SELECT_WEAPON_MELEE,
	INPUT_SELECT_WEAPON_HANDGUN,
	INPUT_SELECT_WEAPON_SHOTGUN,
	INPUT_SELECT_WEAPON_SMG,
	INPUT_SELECT_WEAPON_AUTO_RIFLE,
	INPUT_SELECT_WEAPON_SNIPER,
	INPUT_SELECT_WEAPON_HEAVY,
	INPUT_SELECT_WEAPON_SPECIAL,
	INPUT_SELECT_CHARACTER_MICHAEL,
	INPUT_SELECT_CHARACTER_FRANKLIN,
	INPUT_SELECT_CHARACTER_TREVOR,
	INPUT_SELECT_CHARACTER_MULTIPLAYER,
	INPUT_SAVE_REPLAY_CLIP,
	INPUT_SPECIAL_ABILITY_PC,

	//<!--Start of the actual ON_FOOT controls!-->
	INPUT_SPRINT,
	INPUT_JUMP,
	INPUT_ENTER,
	INPUT_ATTACK,
	INPUT_AIM,
	INPUT_LOOK_BEHIND,
	INPUT_PHONE,
	INPUT_SPECIAL_ABILITY,
	INPUT_SPECIAL_ABILITY_SECONDARY,
	INPUT_MOVE_LR,
	INPUT_MOVE_UD,
	INPUT_MOVE_UP_ONLY,
	INPUT_MOVE_DOWN_ONLY,
	INPUT_MOVE_LEFT_ONLY,
	INPUT_MOVE_RIGHT_ONLY,
	INPUT_DUCK,
	INPUT_SELECT_WEAPON,
	INPUT_PICKUP,
	INPUT_SNIPER_ZOOM,
	INPUT_SNIPER_ZOOM_IN_ONLY,
	INPUT_SNIPER_ZOOM_OUT_ONLY,
	INPUT_COVER,
	INPUT_RELOAD,
	INPUT_TALK,
	INPUT_DETONATE,
	INPUT_HUD_SPECIAL,
	INPUT_ARREST,
	INPUT_ACCURATE_AIM,
	INPUT_CONTEXT,
	INPUT_WEAPON_SPECIAL,
	INPUT_WEAPON_SPECIAL_TWO,
	INPUT_DIVE,
};

enum eVInputInVehicle {
	INPUT_VEH_MOVE_LR,
	INPUT_VEH_MOVE_UD,
	INPUT_VEH_MOVE_UP_ONLY,
	INPUT_VEH_MOVE_DOWN_ONLY,
	INPUT_VEH_MOVE_LEFT_ONLY,
	INPUT_VEH_MOVE_RIGHT_ONLY,
	INPUT_VEH_SPECIAL,
	INPUT_VEH_GUN_LR,
	INPUT_VEH_GUN_UD,
	INPUT_VEH_AIM,
	INPUT_VEH_ATTACK,
	INPUT_VEH_ATTACK2,
	INPUT_VEH_ACCELERATE,
	INPUT_VEH_BRAKE,
	INPUT_VEH_HEADLIGHT,
	INPUT_VEH_EXIT,
	INPUT_VEH_HANDBRAKE,
	INPUT_VEH_HOTWIRE_LEFT,
	INPUT_VEH_HOTWIRE_RIGHT,
	INPUT_VEH_LOOK_BEHIND,
	INPUT_VEH_CIN_CAM,
	INPUT_VEH_NEXT_RADIO,
	INPUT_VEH_PREV_RADIO,
	INPUT_VEH_RADIO_WHEEL,
	INPUT_VEH_HORN,
	INPUT_VEH_FLY_THROTTLE_UP,
	INPUT_VEH_FLY_THROTTLE_DOWN,
	INPUT_VEH_FLY_YAW_LEFT,
	INPUT_VEH_FLY_YAW_RIGHT,
	INPUT_VEH_SPECIAL_ABILITY_FRANKLIN,
	INPUT_VEH_PASSENGER_ATTACK,
	INPUT_VEH_PASSENGER_AIM,
	INPUT_VEH_STUNT_UD,
	INPUT_VEH_CINEMATIC_UD,
	INPUT_VEH_CINEMATIC_UP_ONLY,
	INPUT_VEH_CINEMATIC_DOWN_ONLY,
	INPUT_VEH_CINEMATIC_LR,
	INPUT_VEH_SELECT_NEXT_WEAPON,
	INPUT_VEH_SELECT_PREV_WEAPON,
	INPUT_VEH_ROOF,
	INPUT_VEH_JUMP,
	INPUT_VEH_GRAPPLING_HOOK,
	INPUT_VEH_FLY_ROLL_LR,
	INPUT_VEH_FLY_ROLL_LEFT_ONLY,
	INPUT_VEH_FLY_ROLL_RIGHT_ONLY,
	INPUT_VEH_FLY_PITCH_UD,
	INPUT_VEH_FLY_PITCH_UP_ONLY,
	INPUT_VEH_FLY_PITCH_DOWN_ONLY,
	INPUT_VEH_FLY_UNDERCARRIAGE,
	INPUT_VEH_FLY_ATTACK,
	INPUT_VEH_FLY_SELECT_NEXT_WEAPON,
	INPUT_VEH_FLY_SELECT_PREV_WEAPON,
	INPUT_VEH_FLY_SELECT_TARGET_LEFT,
	INPUT_VEH_FLY_SELECT_TARGET_RIGHT,
	INPUT_VEH_FLY_VERTICAL_FLIGHT_MODE,
	INPUT_VEH_SUB_TURN_LR,
	INPUT_VEH_SUB_TURN_LEFT_ONLY,
	INPUT_VEH_SUB_TURN_RIGHT_ONLY,
	INPUT_VEH_SUB_PITCH_UD,
	INPUT_VEH_SUB_PITCH_UP_ONLY,
	INPUT_VEH_SUB_PITCH_DOWN_ONLY,
	INPUT_VEH_SUB_THROTTLE_UP,
	INPUT_VEH_SUB_THROTTLE_DOWN,
	INPUT_VEH_SUB_ASCEND,
	INPUT_VEH_SUB_DESCEND,
	INPUT_VEH_SUB_TURN_HARD_LEFT,
	INPUT_VEH_SUB_TURN_HARD_RIGHT,
};

enum eVInputMeele {
	INPUT_MELEE_ATTACK_LIGHT,
	INPUT_MELEE_ATTACK_HEAVY,
	INPUT_MELEE_ATTACK_ALTERNATE,
	INPUT_MELEE_BLOCK
};

enum eVInputParachute {
	INPUT_PARACHUTE_DEPLOY,
	INPUT_PARACHUTE_DETACH,
	INPUT_PARACHUTE_TURN_LR,
	INPUT_PARACHUTE_TURN_LEFT_ONLY,
	INPUT_PARACHUTE_TURN_RIGHT_ONLY,
	INPUT_PARACHUTE_PITCH_UD,
	INPUT_PARACHUTE_PITCH_UP_ONLY,
	INPUT_PARACHUTE_PITCH_DOWN_ONLY,
	INPUT_PARACHUTE_BRAKE_LEFT,
	INPUT_PARACHUTE_BRAKE_RIGHT,
	INPUT_PARACHUTE_SMOKE,
};

enum eVInputFrontend {
	INPUT_FRONTEND_DOWN,
	INPUT_FRONTEND_UP,
	INPUT_FRONTEND_LEFT,
	INPUT_FRONTEND_RIGHT,
	INPUT_FRONTEND_RDOWN,
	INPUT_FRONTEND_RUP,
	INPUT_FRONTEND_RLEFT,
	INPUT_FRONTEND_RRIGHT,
	INPUT_FRONTEND_AXIS_X,
	INPUT_FRONTEND_AXIS_Y,
	INPUT_FRONTEND_RIGHT_AXIS_X,
	INPUT_FRONTEND_RIGHT_AXIS_Y,
	INPUT_FRONTEND_PAUSE,
	INPUT_FRONTEND_ACCEPT,
	INPUT_FRONTEND_CANCEL,
	INPUT_FRONTEND_X,
	INPUT_FRONTEND_Y,
	INPUT_FRONTEND_LB,
	INPUT_FRONTEND_RB,
	INPUT_FRONTEND_LT,
	INPUT_FRONTEND_RT,
	INPUT_FRONTEND_LS,
	INPUT_FRONTEND_RS,
	INPUT_FRONTEND_SELECT,
	INPUT_CELLPHONE_UP,
	INPUT_CELLPHONE_DOWN,
	INPUT_CELLPHONE_LEFT,
	INPUT_CELLPHONE_RIGHT,
	INPUT_CELLPHONE_SELECT,
	INPUT_CELLPHONE_CANCEL,
	INPUT_CELLPHONE_OPTION,
	INPUT_CELLPHONE_EXTRA_OPTION,
	INPUT_CELLPHONE_SCROLL_FORWARD,
	INPUT_CELLPHONE_SCROLL_BACKWARD,
	INPUT_SKIP_CUTSCENE,

	//<!--New script remappable inputs, for use in minigames and other scripts instead of unmappable direct pad controls and frontend inputs-->
	INPUT_SCRIPT_LEFT_AXIS_X,
	INPUT_SCRIPT_LEFT_AXIS_Y,
	INPUT_SCRIPT_RIGHT_AXIS_X,
	INPUT_SCRIPT_RIGHT_AXIS_Y,
	INPUT_SCRIPT_RUP,
	INPUT_SCRIPT_RDOWN,
	INPUT_SCRIPT_RLEFT,
	INPUT_SCRIPT_RRIGHT,
	INPUT_SCRIPT_LB,
	INPUT_SCRIPT_RB,
	INPUT_SCRIPT_LT,
	INPUT_SCRIPT_RT,
	INPUT_SCRIPT_LS,
	INPUT_SCRIPT_RS,
	INPUT_SCRIPT_PAD_UP,
	INPUT_SCRIPT_PAD_DOWN,
	INPUT_SCRIPT_PAD_LEFT,
	INPUT_SCRIPT_PAD_RIGHT,
	INPUT_SCRIPT_SELECT,
};

enum eVInputReplay {
	INPUT_REPLAY_MARKER_DELETE,
	INPUT_REPLAY_PAUSE,
	INPUT_REPLAY_REWIND,
	INPUT_REPLAY_FFWD,
	INPUT_REPLAY_NEWMARKER,
	INPUT_REPLAY_RECORD,
	INPUT_REPLAY_SCREENSHOT,
	INPUT_REPLAY_HIDEHUD,
	INPUT_REPLAY_STARTPOINT,
	INPUT_REPLAY_ENDPOINT,
	INPUT_REPLAY_ADVANCE,
	INPUT_REPLAY_BACK,
	INPUT_REPLAY_TOOLS,
	INPUT_REPLAY_RESTART,
	INPUT_REPLAY_SHOWHOTKEY,
	INPUT_REPLAY_CYCLEMARKERLEFT,
	INPUT_REPLAY_CYCLEMARKERRIGHT,
	INPUT_REPLAY_FOVINCREASE,
	INPUT_REPLAY_FOVDECREASE,
	INPUT_REPLAY_CAMERAUP,
	INPUT_REPLAY_CAMERADOWN,
	INPUT_REPLAY_SAVE,
	INPUT_REPLAY_TOGGLETIME,
	INPUT_REPLAY_TOGGLETIPS,
	INPUT_REPLAY_PREVIEW,
};

enum eVTimeCycles {
	TIMECYCLE_MODS_1,
	TIMECYCLE_MODS_2,
	TIMECYCLE_MODS_3,
	TIMECYCLE_MODS_4,
	TIMECYCLE_UNDERWATER_DEEP,
	TIMECYCLE_BLIZZARD,
	TIMECYCLE_CLEAR,
	TIMECYCLE_CLEARING,
	TIMECYCLE_CLOUDS,
	TIMECYCLE_EXTRASUNNY,
	TIMECYCLE_FOGGY,
	TIMECYCLE_NEUTRAL,
	TIMECYCLE_OVERCAST,
	TIMECYCLE_RAIN,
	TIMECYCLE_SMOG,
	TIMECYCLE_SNOW,
	TIMECYCLE_SNOWLIGHT,
	TIMECYCLE_THUNDER
};

enum eVUI3DDraw {
	PAUSE_SINGLE_LEFT,
	PAUSE_SINGLE_MIDDLE,
	PAUSE_SINGLE_RIGHT,
	FACE_CREATION_PRESET,
	MPLOBBY_ALL5SLOTS,
	FACE_CREATION_CONFIRM,

};

enum eVLadderMetadata {
	DEFAULT,
	DEFAULT_NOSLIDE,
	DEFAULT_NOBEHID
};

enum eVStrikeBones {
	SB_left_arm,
	SB_left_arm_large,
	SB_right_arm,
	SB_right_arm_large,
	SB_right_arm_very_large,
	SB_right_elbow,
	SB_right_arm_weapon,
	SB_right_arm_melee_weapon,
	SB_right_arm_swimming_knife,
	SB_right_leg,
	SB_left_leg,
	SB_animal_paws,
	SB_animal_head,

};

enum eVExplosions {
	EXP_TAG_GRENADE,
	EXP_TAG_GRENADELAUNCHER,
	EXP_TAG_STICKYBOMB,
	EXP_TAG_MOLOTOV,
	EXP_TAG_ROCKET,
	EXP_TAG_TANKSHELL,
	EXP_TAG_HI_OCTANE,
	EXP_TAG_CAR,
	EXP_TAG_PLANE,
	EXP_TAG_PETROL_PUMP,
	EXP_TAG_BIKE,
	EXP_TAG_DIR_STEAM,
	EXP_TAG_DIR_FLAME,
	EXP_TAG_DIR_WATER_HYDRANT,
	EXP_TAG_DIR_GAS_CANISTER,
	EXP_TAG_BOAT,
	EXP_TAG_SHIP_DESTROY,
	EXP_TAG_TRUCK,
	EXP_TAG_BULLET,
	EXP_TAG_SMOKEGRENADELAUNCHER,
	EXP_TAG_SMOKEGRENADE,
	EXP_TAG_BZGAS,
	EXP_TAG_FLARE,
	EXP_TAG_GAS_CANISTER,
	EXP_TAG_EXTINGUISHER,
	EXP_TAG_PROGRAMMABLEAR,
	EXP_TAG_TRAIN,
	EXP_TAG_BARREL,
	EXP_TAG_PROPANE,
	EXP_TAG_BLIMP,
	EXP_TAG_DIR_FLAME_EXPLODE,
	EXP_TAG_TANKER,
	EXP_TAG_PLANE_ROCKET,
	EXP_TAG_VEHICLE_BULLET,
	EXP_TAG_GAS_TANK
};

enum eVMaps {
	GTA5,
	TESTBED,
	VFX_TEST,
	NM_TEST,
	NETTESTBED,
	ANIM_TEST,
	CPTESTBED,
	TOOLS_TEST,
	WATERBED,
	GFX_TEST
};

enum eVMotionTaskData {
	PED_ON_FOOT,
	PED_IN_WATER,
	BIRD_ON_FOOT,
	FLIGHTLESS_BIRD,
	HORSE_ON_FOOT,
	ROTTWEILER_ON_FOOT,
	RETRIEVER_ON_FOOT,
	BOAR_ON_FOOT,
	COW_ON_FOOT,
	COUGAR_ON_FOOT,
	COYOTE_ON_FOOT,
	PIG_ON_FOOT,
	RAT_ON_FOOT,
	FISH_IN_WATER,
	DEER_ON_FOOT
};

enum eVNavi {
	SECTORS_PER_NAVMESH = 3,
	SECTORS_PER_NAVNODES = 12,
	NAVMESH_LOAD_DISTANCE = 212,
	RELATIVE_THREAD_PRIORITY = 8,
	MAX_NUM_NAVMESHES_IN_ANY_LEVEL = 10099,
	MAX_NUM_AUDMESHES_IN_ANY_LEVEL = 1000,
	MAX_NUM_NAVNODES_IN_ANY_LEVEL = 400,
	MAX_NUM_DYNAMIC_NAVMESH_TYPES = 40
};

enum eVBrawlingStyles {
	BS_MICHAEL,
	BS_TREVOR,
	BS_FRANKLIN,
	BS_AI,
	BS_ANIMAL,
	BS_DOG,
	BS_COUGAR
};

enum eVPools {
	AnimatedBuilding, // Size: 210
	AttachmentExtension, // Size: 290
	BlendshapeStore, // Size: 75
	Building, // Size: 28500
	carrec, // Size: 3700
	CBoatChaseDirector, // Size: 4
	CVehicleCombatAvoidanceArea, // Size: 5
	CCargen, // Size: 750
	CCargenForScenarios, // Size: 150
	CCombatDirector, // Size: 5
	CCombatInfo, // Size: 16
	CCombatSituation, // Size: 6
	CCoverFinder, // Size: 40
	CDefaultCrimeInfo, // Size: 13
	CTacticalAnalysis, // Size: 3
	AnimStore, // Size: 9750
	CGameScriptResource, // Size: 1500
	ClothStore, // Size: 60
	CombatMeleeManager_Groups, // Size: 3
	CombatMountedManager_Attacks, // Size: 1
	CompEntity, // Size: 39
	CPrioritizedClipSetBucked, // Size: 22
	CPrioritizedClipSetRequest, // Size: 106
	CRoadBlock, // Size: 3
	CStuntJump, // Size: 64
	CScenarioInfo, // Size: 64
	CScenarioPointExtraData, // Size: 220
	CutsceneStore, // Size: 400
	CScriptEntityExtension, // Size: 150
	CVehicleChaseDirector, // Size: 4
	CVehicleClipRequestHelper, // Size: 45
	CPathNodeRouteSearchHelper, // Size: 119
	CGrabHelper, // Size: 8
	CGpsNumNodesStored, // Size: 1024
	CClimbHandHoldDetected, // Size: 16
	CAmbientLookAt, // Size: 40
	DrawableStore, // Size: 50000
	DummyObject, // Size: 8000
	DwdStore, // Size: 10650
	EntityBatch, // Size: 5000
	GrassBatch, // Size: 5000
	ExprDictStore, // Size: 190
	FrameFilterStore, // Size: 14
	FragmentStore, // Size: 4255
	GamePlayerBroadcastDataHandler_Remote, // Size: 500
	InteriorInst, // Size: 80
	InteriorProxy, // Size: 475
	IplStore, // Size: 3000
	MaxLoadedInfo, // Size: 6000
	MaxLoadRequestedInfo, // Size: 3000
	ActiveLoadedInfo, // Size: 3000
	ActivePersistentLoadedInfo, // Size: 1439
	KnownRefs, // Size: 11500
	LightEntity, // Size: 2000
	MapDataLoadedNode, // Size: 566
	MapDataStore, // Size: 4300
	MapTypesStore, // Size: 800
	MetaDataStore, // Size: 1551
	NavMeshes, // Size: 10100
	NetworkDefStore, // Size: 118
	NetworkCewDataMgr, // Size: 16
	Object, // Size: 800
	OcclusionInteriorInfo, // Size: 50
	OcclusionPortalEntity, // Size: 163
	OcclusionPortalInfo, // Size: 250
	Peds, // Size: 110
	ScenarioPedsMultiplier, // Size: 100
	AmbientPedsMultiplier, // Size: 100
	MaxTotalPeds, // Size: 100
	CWeapon, // Size: 117
	phInstGTA, // Size: 2214
	PhysicsBounds, // Size: 1450
	CPickup, // Size: 73
	CPickupPlacement, // Size: 280
	CPickupPlacementCustomScriptData, // Size: 60
	CRegenerationInfo, // Size: 56
	PedMemoryMultiplier, // Size: 500
	PedsForVehicles, // Size: 75
	PortalInst, // Size: 95
	PoseMatcherStore, // Size: 20
	PMStore, // Size: 100
	PtFxSortedEntity, // Size: 30
	PtFxAssetStore, // Size: 250
	QuadTreeNodes, // Size: 1310
	ScaleformStore, // Size: 642
	ScaleformMgrArray, // Size: 40
	ScriptStore, // Size: 780
	StaticBounds, // Size: 10520
	tcBox, // Size: 1300
	TrafficLightInfos, // Size: 84
	TxdStore, // Size: 27300
	Vehicles, // Size: 148
	VehicleAmbientDensityMultiplier, // Size: 100
	VehicleMemoryMultiplier, // Size: 300
	VehicleParkedDensityMultiplier, // Size: 100
	VehicleStreamRequest, // Size: 30
	VehicleStreamRender, // Size: 35
	VehicleStruct, // Size: 53
	VehicleUpperLimit, // Size: 60
	VehicleUpperLimitMP, // Size: 20
	VehicleKeyholeShapeInnerThickness, // Size: 50
	VehicleKeyholeShapeOuterThickness, // Size: 60
	VehicleKeyholeShapeInnerRadius, // Size: 50
	VehicleKeyholdShapeOuterRadius, // Size: 165
	VehicleKeyholdSideWallThickness, // Size: 60
	VehicleMaxCreationDistance, // Size: 225
	VehicleMaxCreationDistanceOffscreen, // Size: 50
	VehicleCullRange, // Size: 251
	VehicleCullRangeOffScreen, // Size: 100
	DensityBasedRemovalRateScale, // Size: 36
	DensityBasedRemovalTargetHeadroom, // Size: 10
	VehicleSpacing_0, // Size: 1
	VehicleSpacing_1, // Size: 172
	VehicleSpacing_2, // Size: 150
	VehicleSpacing_3, // Size: 129
	VehicleSpacing_4, // Size: 110
	VehicleSpacing_5, // Size: 88
	VehicleSpcaing_6, // Size: 55
	VehicleSpacing_7, // Size: 52
	VehicleSpacing_8, // Size: 45
	VehicleSpacing_9, // Size: 40
	VehicleSpacing_10, // Size: 34
	VehicleSpacing_11, // Size: 27
	VehicleSpacing_12, // Size: 22
	VehicleSpacing_13, // Size: 20
	VehicleSpcaing_14, // Size: 19
	VehicleSpacing_15, // Size: 18
	PlayersRoadScanDistance, // Size: 300
	PlayerRoadDensityInc_0, // Size: 0
	PlayerRoadDensityInc_1, // Size: 0
	PlayerRoadDensityInc_2, // Size: 0
	PlayerRoadDensityInc_3, // Size: 0
	PlayerRoadDensityInc_4, // Size: 0
	PlayerRoadDensityInc_5, // Size: 0
	PlayerRoadDensityInc_6, // Size: 0
	PlayerRoadDensityInc_7, // Size: 0
	PlayerRoadDensityInc_8, // Size: 0
	PlayerRoadDensityInc_9, // Size: 0
	PlayerRoadDensityInc_10, // Size: 0
	PlayerRoadDensityInc_11, // Size: 0
	PlayerRoadDensityInc_12, // Size: 0
	PlayerRoadDensityInc_13, // Size: 0
	PlayerRoadDensityInc_14, // Size: 0
	PlayerRoadDensityInc_15, // Size: 0
	NonPlayerRoadDensityDec_1, // Size: 0
	NonPlayerRoadDensityDec_2, // Size: 0
	NonPlayerRoadDensityDec_3, // Size: 1
	NonPlayerRoadDensityDec_4, // Size: 1
	NonPlayerRoadDensityDec_5, // Size: 1
	NonPlayerRoadDensityDec_6, // Size: 1
	NonPlayerRoadDensityDec_7, // Size: 2
	NonPlayerRoadDensityDec_8, // Size: 2
	NonPlayerRoadDensityDec_9, // Size: 2
	NonPlayerRoadDensityDec_10, // Size: 2
	NonPlayerRoadDensityDec_11, // Size: 2
	NonPlayerRoadDensityDec_12, // Size: 3
	NonPlayerRoadDensityDec_13, // Size: 3
	NonPlayerRoadDensityDec_14, // Size: 3
	NonPlayerRoadDensityDec_15, // Size: 3
	VehiclePopulationFrameRate, // Size: 25
	VehiclePopulationCyclesPerFrame, // Size: 1
	wptrec, // Size: 768
	fwLodNode, // Size: 12500
	CTask, // Size: 1450
	CEvent, // Size: 500
	CMoveObject, // Size: 112
	CMoveAnimatedBuilding, // Size: 161
	atDScriptObjectNode, // Size: 450
	fwDynamicArchetypeComponent, // Size: 6830
	fwDynamicEntityComponent, // Size: 1000
	fwEntityContainer, // Size: 615
	fwMatrixTransform, // Size: 1536
	fwQuaternionTransform, // Size: 12958
	fwSimpleTransform, // Size: 30720
	ScenarioCarGensPerRegion, // Size: 80
	ScenarioPointsAndEdgesPerRegion, // Size: 1000
	ScenarioPoint, // Size: 900
	ScenarioPointEntity, // Size: 350
	ScenarioPointWorld, // Size: 1400
	MaxNonRegionScenarioPointSpatialObjects, // Size: 900
	ObjectIntelligence, // Size: 37
	VehicleScenarioAttractors, // Size: 64
	AircraftFlames, // Size: 34
	CScenarioPointChainUseInfo, // Size: 76
	CScenarioClusterSpawnedTrackingData, // Size: 190
	CSPClusterFSMWrapper, // Size: 192
	fwArchetypePooledMap, // Size: 36497
	CTaskConversationHelper, // Size: 4
	SyncedScenes, // Size: 10
	CPropManagementHelper, // Size: 77
	ActionTable_Definitions, // Size: 271
	ActionTable_Results, // Size: 426
	ActionTable_Impulses, // Size: 20
	ActionTable_Interrelations, // Size: 60
	ActionTable_Homings, // Size: 156
	ActionTable_Damages, // Size: 21
	ActionTable_StrikeBones, // Size: 15
	ActionTable_Rumbles, // Size: 5
	ActionTable_Branches, // Size: 15
	ActionTable_StealthKills, // Size: 10
	ActionTable_Vfx, // Size: 30
	ActionTable_FacialAnimSets, // Size: 5
	NetworkEntityAreas, // Size: 64
	NavMeshRoute // Size: 113
};

enum eVPADStates {
	PAD_RSTICK_DOWN,
	PAD_RSTICK_UP,
	PAD_RSTICK_LEFT,
	PAD_DPAD_NONE,
	PAD_DPAD_UPDOWN,
	PAD_DPAD_ALL,
	PAD_LSTICK_DOWN,
	PAD_LSTICK_UP,
	PAD_LSTICk_LEFT,
	PAD_DPAD_DOWN,
	PAD_DPAD_UP,
	PAD_LSTICK_ALL,
	PAD_DPAD_LEFT,
	PAD_DPAD_RIGHT,
	PAD_RSTICK_ALL,
	PAD_RSTICK_NONE,
	PAD_LSTICK_RIGHT,
	PAD_RSTICK_ROTATE,
	PAD_LSTICK_NONE,
	PAD_RSTICK_UPDOWN,
	PAD_LSTICK_UPDOWN,
	PAD_LSTICK_ROTATE,
	PAD_DPAD_LEFTRIGHT,
	PAD_RSTICK_LEFTRIGHT,
	PAD_RSTICK_RIGHT,
	PAD_LSTICK_LEFTRIGHT
};

enum eVMenuIDs {
	MENU_UNIQUE_ID_SETTINGS_CAMERA,
	MENU_UNIQUE_ID_HOME_NEWSWIRE,
	MENU_UNIQUE_ID_CUTSCENE_EMPTY,
	MENU_UNIQUE_ID_REPLAY_RANDOM,
	MENU_UNIQUE_ID_SETTINGS_SIXAXIS,
	MENU_UNIQUE_ID_INCEPT_TRIGGER,
	MENU_UNIQUE_ID_BETTING_LOBBYLIST,
	MENU_UNIQUE_ID_BETTING_INFOLIST,
	MENU_UNIQUE_ID_BETTING,
	MENU_UNIQUE_ID_HEADER_BETTING,
	MENU_UNIQUE_ID_RACE_LOBBYLIST,
	MENU_UNIQUE_ID_RACE_INFOLIST,
	MENU_UNIQUE_ID_RACE_INFO,
	MENU_UNIQUE_ID_HEADER_RACE,
	MENU_UNIQUE_ID_CREW_REQUEST,
	MENU_UNIQUE_ID_HOME_OPEN_JOBS,
	MENU_UNIQUE_ID_CREW_LEADERBOARDS,
	MENU_UNIQUE_ID_CORONA_INVITE_LAST_JOB_PLAYERS,
	MENU_UNIQUE_ID_CORONA_INVITE_MATCHED_PLAYERS,
	MENU_UNIQUE_ID_HEADER_CORONA_INVITE_LAST_JOB_PLAYERS,
	MENU_UNIQUE_ID_HEADER_CORONA_INVITE_MATCHED_PLAYERS,
	MENU_UNIQUE_ID_CORONA_JOINED_LIST,
	MENU_UNIQUE_ID_CORONA_INVITE_LIST,
	MENU_UNIQUE_ID_CORONA_DETAILS_LIST,
	MENU_UNIQUE_ID_CORONA_SETTINGS_LIST,
	MENU_UNIQUE_ID_HEADER_JOINING_SCREEN,
	MENU_UNIQUE_ID_SETTINGS_FACEBOOK,
	MENU_UNIQUE_ID_CORONA_INVITE_CREWS,
	MENU_UNIQUE_ID_CORONA_INVITE_FRIENDS,
	MENU_UNIQUE_ID_CORONA_INVITE_PLAYERS,
	MENU_UNIQUE_ID_CORONA_JOINED_PLAYERS,
	MENU_UNIQUE_ID_HEADER_CORONA_INVITE_CREWS,
	MENU_UNIQUE_ID_HEADER_CORONA_INVITE_FRIENDS,
	MENU_UNIQUE_ID_HEADER_CORONA_INVITE_PLAYERS,
	MENU_UNIQUE_ID_HEADER_CORONA_JOINED_PLAYERS,
	MENU_UNIQUE_ID_HEADER_CORONA_LOBBY,
	MENU_UNIQUE_ID_HEADER_CORONA,
	MENU_UNIQUE_ID_LOBBY_LIST_ITEM,
	MENU_UNIQUE_ID_LOBBY_LIST,
	MENU_UNIQUE_ID_HEADER_TEXT_SELECTION,
	MENU_UNIQUE_ID_BRIGHTNESS_CALIBRATION,
	MENU_UNIQUE_ID_GALLERY_OPTIONS_LIST,
	MENU_UNIQUE_ID_GALLERY_OPTIONS,
	MENU_UNIQUE_ID_SETTINGS_FEED,
	MENU_UNIQUE_ID_HEADER_EMPTY,
	MENU_UNIQUE_ID_HOME_DIALOG,
	MENU_UNIQUE_ID_TEAM_SELECT,
	MENU_UNIQUE_ID_FRIENDS_MP,
	MENU_UNIQUE_ID_FRIENDS_OPTIONS_LIST,
	MENU_UNIQUE_ID_CREW_OPTIONS_LIST,
	MENU_UNIQUE_ID_CREW_OPTIONS,
	MENU_UNIQUE_ID_PARTY_OPTIONS_LIST,
	MENU_UNIQUE_ID_PARTY_OPTIONS,
	MENU_UNIQUE_ID_PLAYERS_OPTIONS_LIST,
	MENU_UNIQUE_ID_PLAYERS_OPTIONS,
	MENU_UNIQUE_ID_PLAYERS_LIST,
	MENU_UNIQUE_ID_CREATION_LIFESTYLE_LIST,
	MENU_UNIQUE_ID_CREATION_HERITAGE_LIST,
	MENU_UNIQUE_ID_CREW,
	MENU_UNIQUE_ID_REPLAY_MISSION_ACTIVITY,
	MENU_UNIQUE_ID_REPLAY_MISSION_LIST,
	MENU_UNIQUE_ID_REPLAY_MISSION,
	MENU_UNIQUE_ID_PARTY_LIST,
	MENU_UNIQUE_ID_CREATION_YOU,
	MENU_UNIQUE_ID_CREATION_LIFESTYLE,
	MENU_UNIQUE_ID_CREATION_HERITAGE,
	MENU_UNIQUE_ID_HEADER_MP_CHARACTER_CREATION,
	MENU_UNIQUE_ID_HEADER_MP_CHARACTER_SELECT,
	MENU_UNIQUE_ID_FRIENDS_OPTIONS,
	MENU_UNIQUE_ID_FRIENDS_LIST,
	MENU_UNIQUE_ID_MISSION_CREATOR_STAT,
	MENU_UNIQUE_ID_MISSION_CREATOR_LISTITEM,
	MENU_UNIQUE_ID_MISSION_CREATOR_CATEGORY,
	MENU_UNIQUE_ID_CREW_LIST,
	MENU_UNIQUE_ID_CREW_INVITES,
	MENU_UNIQUE_ID_CREW_FRIENDS,
	MENU_UNIQUE_ID_CREW_ROCKSTAR,
	MENU_UNIQUE_ID_CREW_MINE,
	MENU_UNIQUE_ID_STATS_LISTITEM,
	MENU_UNIQUE_ID_SPECTATOR,
	MENU_UNIQUE_ID_CREWS_CARD,
	MENU_UNIQUE_ID_CREWS_FILTER,
	MENU_UNIQUE_ID_CREWS_CATEGORY,
	MENU_UNIQUE_ID_MAP_LEGEND,
	MENU_UNIQUE_ID_SAVE_GAME_LIST,
	MENU_UNIQUE_ID_SETTINGS_LIST,
	MENU_UNIQUE_ID_STATS_CATEGORY,
	MENU_UNIQUE_ID_PLACEHOLDER,
	MENU_UNIQUE_ID_LOBBY,
	MENU_UNIQUE_ID_PARTY,
	MENU_UNIQUE_ID_HEADER_LOBBY,
	MENU_UNIQUE_ID_HEADER_PRE_LOBBY,
	MENU_UNIQUE_ID_LEAVE_GAME,
	MENU_UNIQUE_ID_GAME_MP,
	MENU_UNIQUE_ID_MISSION_CREATOR,
	MENU_UNIQUE_ID_HEADER_MY_MP,
	MENU_UNIQUE_ID_HEADER_MULTIPLAYER,
	MENU_UNIQUE_ID_MP_CHAR_5,
	MENU_UNIQUE_ID_MP_CHAR_4,
	MENU_UNIQUE_ID_MP_CHAR_3,
	MENU_UNIQUE_ID_MP_CHAR_2,
	MENU_UNIQUE_ID_MP_CHAR_1,
	MENU_UNIQUE_ID_FREEMODE,
	MENU_UNIQUE_ID_GALLERY_ITEM,
	MENU_UNIQUE_ID_SETTINGS_SAVEGAME,
	MENU_UNIQUE_ID_CREWS,
	MENU_UNIQUE_ID_HOME,
	MENU_UNIQUE_ID_HEADER_SAVE_GAME,
	MENU_UNIQUE_ID_HEADER,
	MENU_UNIQUE_ID_SAVE_GAME,
	MENU_UNIQUE_ID_LOAD_GAME,
	MENU_UNIQUE_ID_NEW_GAME,
	MENU_UNIQUE_ID_SETTINGS_CONTROLS,
	MENU_UNIQUE_ID_SETTINGS_DISPLAY,
	MENU_UNIQUE_ID_SETTINGS_AUDIO,
	MENU_UNIQUE_ID_HOME_FEED,
	MENU_UNIQUE_ID_HOME_BRIEF,
	MENU_UNIQUE_ID_HOME_HELP,
	MENU_UNIQUE_ID_STORE,
	MENU_UNIQUE_ID_CORONA_INVITE,
	MENU_UNIQUE_ID_CORONA_SETTINGS,
	MENU_UNIQUE_ID_HOME_MISSION,
	MENU_UNIQUE_ID_LOST,
	MENU_UNIQUE_ID_COPS,
	MENU_UNIQUE_ID_VAGOS,
	MENU_UNIQUE_ID_AVAILABLE,
	MENU_UNIQUE_ID_STATS,
	MENU_UNIQUE_ID_MEDALS,
	MENU_UNIQUE_ID_WEAPONS,
	MENU_UNIQUE_ID_PLAYERS,
	MENU_UNIQUE_ID_SETTINGS,
	MENU_UNIQUE_ID_GAME,
	MENU_UNIQUE_ID_SOCIALCLUB,
	MENU_UNIQUE_ID_GALLERY,
	MENU_UNIQUE_ID_FRIENDS,
	MENU_UNIQUE_ID_INFO,
	MENU_UNIQUE_ID_START,
	MENU_UNIQUE_ID_MAP,
	MENU_UNIQUE_ID_INVALID,
};

enum eVScriptVMNatives {
	SET_PLAYER_ARMOUR,
	SET_PLAYER_HEALTH,
	REMOVE_SAVING,
	SET_DISPLAY_CONFIG,
	SET_MINIMAP_VISIBLE_STATE,
	SET_HELPTEXT_HEIGHT,
	SET_IMPORTANT_PARAMS,
	REMOVE_HUD_ITEM,
	MULTIPLAYER_IS_ACTIVE,
	FLASH_HEALTH_BAR,
	SET_CHARACTER_COLOUR,
	SET_ABILITY_BAR,
	FLASH_ABILITY_BAR,
	BLINK_ABILITY_BAR,
	SET_AIR_BAR,
	OVERRIDE_COMPONENT_POSITION,
	SHOW_STALL_WARNIG,
	TOGGLE_COMPONENT,
	FLASH_MINIMAP,
	GET_ASSET_ARRAY,
	REGISTER_HEALTH_ARMOUR,
	REGISTER_MAP_LAYER,
	STOP_BLIP_FLASHING,
	START_BLIP_FLASHING,
	SHOW_AIRCRAFT_COMPONENTS,
	GOLF_LINK,
	SET_DATA_SLOT_EMPTY,
	SET_INPUT_EVENT_CROSS,
	SET_INPUT_EVENT_CIRCLE,
	GET_CURRENT_COLOUMN,
	SET_INPUT_EVENT,
	HIDE_BUTTONS,
	HAS_NO_MEMBERS,
	STOP_FLASHING_WANTED_OVERLAY,
	FLASH_WANTED_OVERLAY,
	IS_WAYPOIT_SET,
	GET_CURRENT_END_INDEX,
	GET_CURRENT_START_INDEX,
	SET_INPUT_EVENT_TRIANGLE,
	FADE_TO_BLACK,
	HIGHLIGHT_ITEM,
	SET_ANALOG_STICK_INPUT,
	TXT_ALREADY_LOADED,
	RESTART_MOVIE,
	PAUSE_MENU_SP_CONTENT,
	SET_COLUMN_TITLE,
	SET_SAVING_TEXT,
	REMOVE_STREAM_COMPONENT,
	SET_STREAM_COMPONENT,
	SET_COMPONENT_VALUES,
	SET_COMPONENT_POSITION,
	SELECT_RADIO_STATION,
	SET_PLAYER_WEAPON_WHEEL,
	SET_POITER,
	START_CROSSFADE,
	SET_STATS_VISIBILITY,
	PM_RANGE,
	PM_ACCURACY,
	PM_FIRERATE,
	PM_DAMAGE,
	SET_STATS_LABLES_AND_VALUES,
	SET_ATTACHMENTS,
	NO_ATTACHMENST,
	GET_CURRENT_WEAPON_WHEEL_HASH,
	SET_WEAPON_WHEEL_ACTIVE,
	UNLOAD_WEAPON_WHEEL_STATS,
	UNLOAD_WEAPON_WHEEL,
	SET_RETICLE_VISIBLE,
	SHOW_HITMARKER,
	SET_SATNAV_DIRECTION,
	HIDE_SATNAV,
	HIDE_DEPTH,
	SET_SATNAV_DISTANCE,
	SET_SATNAV_AREA,
	SET_DEPTH,
	SHOW_DEPTH,
	SET_BACKGROUND_COLOURS,
	DRAW_INSTRUCTIONAL_BUTTONS,
	SET_DATA_SLOT,
	SET_CLEAR_SPACE,
	DISPLAY_DATA_SLOT,
	SET_STATUS_COLOURS,
	STORE_FREE_PRICE, // maybe at the hair cut studio

	// Ui menu selector ADD_COLUMN,
	REMOVE_COLUMN,
	STORE_NO_CONTENT,

	DISPLAY_ERROR_MESSAGE,
	SET_LANGUAGES,
	SET_CONTEXT_SLOT,
	SHOW_CONTEXT_MENU,
	CONTROLLER_LABLES,
	SET_CONTROL_LABLS,
	INIT_COLUMN_SCROLL,
	UPDATE_SLOT,
	BEGI_RESTART_PAUSE_MENU,
	SET_HEADING_DETAILS,
	SET_CHAR_IMG,
	SET_CREW_IMG,
	SET_ALL_HIGHLIGHTS,
	SET_MENU_HEADER_TEXT_BY_INDEX,
	SET_MENU_ITEM_COLOUR,
	SET_DIMMABLE,
	BUILD_MENU_GFX_FILES,
	BUILD_MENU,
	SHOW_HEADIG_DETAILS,
	SET_HEADER_TITLE,
	LOAD_CHILD_PAGE,
	SET_CONTENT_SCALED,
	MENU_SHIFT_DEPTH,
	SET_TITLE,
	SET_COLUMN_HIGHLIGHT,
	SET_COLUMN_FOCUS,
	SHOW_COLUMN,
	SET_COLUMN_SCROLL,
	SHOW_WARNING_MESSAGE,
	SCROLL_POLICY_TEXT,

	// To be continued 
	// .rdata:82019224 00000026 C SET_WELCOME_FALLBACK_IMAGE_VISIBILITY
};

enum eVUIScriptNatives {
	SET_CASH,
	SHUTDOWN_MOVIE,
	ADD_PROGRAM,
	RUN_PROGRAM,
	OPEN_POPUP,
	CLOSE_POPUP,
	IS_PC_NEEDED,
	SET_SCAN_BAR,
	PLAY_SCAN_ANIM,
	GET_CURRENT_SELECTION,
	SET_HEADER,
	DISPLAY_VIEW,
	SET_POSITIVE_BUTTON,
	SET_NEGATIVE_BUTTON,
	SET_OTHER_BUTTON,
	SET_THEME,
	CREATE_ALERT,
	CLEAR_ALL,
	SET_SLEEP_MODE,
	OPEN_SHUTTER,
	CLOSE_SHUTTER,
	CLOSE_THEN_OPEN_SHUTTER,
	SET_TITLEBAR_TIME,
	SET_LAYOUT,
	SET_WIND,
	SET_ZOOM_LEVEL,
	SET_COMPASS,
	DISPLAY_STAT,
	SET_TEXT,
	PROXY_FUNCTION,
	SET_POPUP,
	SET_WIDESCREEN,
	SHOW,
	HIDE,
	SET_SOFT_KEYS,
	SET_SOFT_KEYS_COLOUR,
	DISPLAY_STAT_LIST,
	SHOW_STATIC,
	SET_PROGRESS_BAR,
	SET_POLICE_NUMBER,
	SET_UI_COLOUR,
	SET_DISPLAY,
	SET_BACKGROUND_VISIBILITY,
	SET_BAR_VALUE,
	FLASH_BAR,
	CREATE_VIEW,
	SET_ECG_HEALTH,
	SET_HEALTH,
	SET_HEART_RATE,
	QUIT,
	SET_COUNTER,
	SET_LABELS,
	SET_CAR_FIX_PERCENT,
	SET_CARFIX_COLOUR,
	SET_RANK_BAR,
	SET_HEART_BEAT,
	SET_TODO,
	SET_MISSION_TITLE,
	ADD_BUTTON_TO_LIST,
	SET_TOTAL,
	DRAW_BUTTONS,
	SET_MEDAL,
	SET_SOCIAL_CLUB_INFO,
	BUTTON_DEPRESSED,
	REMOVE_BUTTONS,
	BUTTON_PRESSED,
	SET_MISSION_TITLE_COLOUR,
	SET_MOVIECLIP_IS_VISIBLE,
	SET_CHARGE_VALUE,
	START_METER_FLASHING,
	STOP_METER_FLASHING,
	SHOW_RACE_MODULE,
	UPDATE_DATA_SLOT,
	APPEND_DATA_SLOT,
	SET_BROWSER_CURSOR_SPEED_MODIFIER,
	INITIALISE_WEBSITE,
	IS_SITE_DYNAMIC,
	GET_SITE_ID,
	GET_PAGE_ID,
	UPDATE_TEXT,
	GO_TO_WEBPAGE,
	GET_CURRENT_OBJECT_TYPE,
	CAN_I_CLOSE_THE_BROWSER,
	DRAW_MENU_LIST,
	SET_LOGO,
	SET_BACKGROUND_COLOUR,
	SET_GAMEPLAY_LABELS,
	FOCUS_VIEW,
	SHOW_HEIST_ASSET,
	SHOW_VIEW,
	SHOW_CREW_MEMBER_VIEW,
	REPOSITION_VIEW,
	DRAW_LIST,
	SET_ROW_A,
	SET_ROW_B,
	SET_SPIN_DIRECTION,
	SET_CONCAT_MESSAGE,
	SET_TIME,
	SET_MESSAGE,
	SET_SHOT_DISPLAY,
	SET_SPLASH,
	SET_HOLE_DISPLAY,
	SET_WIND_DIRECTION,
	TINT_WIND_POINTER,
	SET_COMPASS_DIRECTION,
	SET_PUTTMETER,
	SET_DISTANCE,
	SET_SCOREPANEL,
	SET_SCOREBOARD,
	SET_HEADER_A,
	SET_HEADER_B,
	SET_SCORES_A,
	SET_SCORES_B,
	SHOW_RAMPAGE_TITLE,
	HIDE_RAMPAGE_TITLE,
	SHOW_RAMPAGE_COUNTERS,
	HIDE_RAMPAGE_COUNTERS,
	SET_RAMPAGE_TITLE,
	CLEAR_TAXI_DISPLAY,
	SET_TAXI_PRICE,
	SHOW_TAXI_DESTINATION,
	ADD_TAXI_DESTINATION,
	SET_RACE_LABELS,
	SET_RACE_POSITION,
	SET_GATES_POSITION,
	SET_RACE_TIME,
	SET_RACE_RESULTS,
	SHOW_RACE_RESULTS,
	SET_TEETH_BRITTLE,
	SET_TEETH_ANGLE,
	SET_TEETH_DEPTH,
	SET_SCROLL_TEXT,
	DISPLAY_SCROLL_TEXT,
	CLEAR_SCROLL_TEXT,
	SET_CAM_HEADING,
	SET_CAM_FOV,
	INIT_GAME,
	COURSE_PAR,
	SET_WAITING_TEXT,
	MOVE_CURSOR,
	SET_MISSION_BG_COLOUR,
	COURSE_PAR_TOTAL,
	SHOW_ASSASSINATIONS_TITLE,
	HIDE_ASSASSINATIONS_TITLE,
	SET_ASSASSINATIONS_TITLE,
	SET_STICK_POINTER_RGB,
	SET_STICK_POINTER_ANGLE,
	SET_SECTION,
	SET_DATE,
	TRIGGER_CAM_FLASH,
	TRIGGER_WARNING,
	SET_BUTTON_ACTIVE,
	REPOSITION_WORD,
	CROSS_WORD,
	DELETE_WORD,
	SET_BACKGROUND_IMAGE,
	DISPLAY_PHOTO,
	SET_IP_OUTCOME,
	SET_ROULETTE_OUTCOME,
	SET_COUNTDOWN,
	SET_SPEED,
	SET_LIVES,
	CLOSE_APP,
	OPEN_ERROR_POPUP,
	OPEN_APP,
	SHOW_SOCIAL_CLUB_MESSAGE,
	HIDE_SOCIAL_CLUB_MESSAGE,
	SET_HOTSWAP_PHONE,
	SET_COLUMN_SPEED,
	SET_HEADINGS,
	SET_ROULETTE_WORD,
	SET_HOTSWAP_MESSAGE,
	SHOW_RAMPAGE_INTRO,
	SHOW_RAMPAGE_COUNTDOWN,
	SHOW_RAMPAGE_OUTRO,
	SHOW_RAMPAGE,
	HIDE_RAMPAGE,
	OPEN_LOADING_PROGRESS,
	SET_LOADING_PROGRESS,
	SET_LOADING_MESSAGE,
	CREATE_CELLPHONE_PREVIEW,
	REMOVE_DRUG_PURSE,
	SET_DRUG_AMOUNT_AND_TYPE,
	SET_FEED_DLC,
	REMOVE_FEED_DLC,
	SET_FEED_FRIENDS,
	REMOVE_FEED_FRIENDS,
	SET_FEED_MESSAGE_PICTURE,
	REMOVE_FEED_MESSAGE_PICTURE,
	SET_FEED_MESSAGE_TEXT,
	REMOVE_FEED_MESSAGE_TEXT,
	SET_FEED_SOCIALCLUB,
	REMOVE_FEED_SOCIALCLUB,
	SET_FEED_STATS,
	REMOVE_FEED_STATS,
	SET_INPUT_EVENT_SELECT,
	SET_INPUT_EVENT_BACK,
	SHOW_MP_INVENTORY_ITEM_WITH_TEXT,
	SET_HEADER_ITEM_COLOUR,
	SET_MENU_HEADER_TEXT,
	SET_ABILITY_BAR_GLOW,
	debug,
	SHOW_PHOTO_FRAME,
	FLASH_PHOTO_FRAME,
	SET_REMAINING_PHOTOS,
	SHOW_MP_INVENTORY_ITEM,
	REMOVE_MP_INVENTORY_ITEM,
	SET_PLAYER_SWITCH,
	SET_PLAYER_SWITCH_WITH_HINT_AND_CHARACTER,
	CLEANUP_PLAYER_SWITCH_ALERT,
	DESTROY,
	ADD_PLAYER_TO_SWITCH,
	START_PLAYER_SWITCH_LOOP,
	LOAD_PLAYER_SWITCH_ALERT,
	SET_COLOUR,
	OVERRIDE_ANIMATION_SPEED,
	OVERRIDE_ONSCREEN_DURATION,
	SET_BAR_TEXT,
	RESET_BAR_TEXT,
	FADE_BAR_OUT,
	SET_RANK_SCORES,
	REMOVE,
	RESET_MOVIE,
	COLOUR_INFOBAR,
	SET_NUMBERPAD_DISPLAY,
	HOME_MENU,
	CAMERA_SHUTTER,
	CONTACT_LIST,
	SIMPLE_LIST,
	TODO_LIST,
	TODO_VIEW,
	SIDE_TASKS,
	RECENT_CONTACTS_LIST,
	CALENDAR_LIST,
	TEXT_MESSAGE_LIST,
	TEXT_MESSAGE_VIEW,
	EMAIL_LIST,
	EMAIL_VIEW,
	CALL_SCREEN,
	ALERT_DIALOG,
	HIDE_ALERT_DIALOG,
	SHOW_KEYBOARD,
	HIDE_KEYBOARD,
	HIDE_NUMBERPAD,
	SHOW_NUMBERPAD,
	GET_DATA,
	SET_PROVIDER_ICON,
	APP_FUNCTION,
	IS_COUNTDOWN_VISIBLE,
	SET_SPLASH_TEXT,
	SPLASH_TEXT_LABEL,
	SPLASH_TEXT_COLOR,
	SPLASH_TEXT_TRANSITION_IN,
	SPLASH_TEXT_TRANSITION_OUT,
	IS_SPLASH_TEXT_VISIBLE,
	SET_DISPLAY_TYPE,
	SET_MULTIPLAYER_TITLE,
	GET_BROWSER_FAVORITES_SIZE,
	SET_BROWSER_FAVORITES_SIZE,
	GET_BROWSER_FAVORITES,
	SET_BROWSER_FAVORITES,
	GET_BROWSER_HISTORY_SIZE,
	SET_BROWSER_HISTORY_SIZE,
	GET_BROWSER_HISTORY,
	SET_BROWSER_HISTORY,
	SET_BROWSER_SKIN,
	SET_ERROR_TEXT,
	SET_TITLEBAR_TEXT,
	SET_MAX_WIDTH
};

enum eVDelays {
	FEED_DELAY_1HOUR,
	FEED_DELAY_30MIN,
	FEED_DELAY_15MIN,
	FEED_DELAY_4MIN,
	FEED_DELAY_10MIN,
	FEED_DELAY_5MIN,
	FEED_DELAY_3MIN,
	FEED_DELAY_2MIN,
	FEED_DELAY_1MIN,
	FEED_NO_DELAY
};

enum eVPCards {
	PCARD_SEND_INVT_TITLE,
	PCARD_ONLINE_OTHER,
	PCARD_ONLINE_SP,
	PCARD_ONLINE_MP,
	PCARD_ONLINE_SES,
	PCARD_NEVER_PLAYED_SP,
	PCARD_JOIN_CREW,
	PCARD_UPDATE_SC,
	PCARD_JOIN_SC,
	PCARD_INVITE_CREW_ALT,
	PCARD_INVITE_CREW,
	PCARD_NO_CREW,
	PCARD_CREW_INVITE,
	PCARD_SYNCING_STATS,
	PCARD_NEVER_PLAYED_MP,
	PCARD_SYNC_ERROR,
	PCARD_SEND_INVT_TEXT
};

enum eVErrors {
	ERROR_NO_SC,
	ERROR_UPDATE_SC,
	ERROR_GAL_HDR,
	ERROR_EMPTY_,
	ERROR_EMPTY_TITLE,
	ERROR_PROFANITY_HEADER,
	ERROR_FAILEDPROFANITY,
	ERROR_DEL_HDR,
	ERROR_DELTE,
	ERROR_PROFILESETTIGNS_FACEBOOK,
	ERROR_FB_HEADER,
	ERROR_FACEBOOK,
};

enum eVCorona {
	CORONA_INVITE_LAST_JOB_PLAYERS,
	CORONA_INVITE_MATCHED_PLAYERS,
	CORONA_INVITE_JOINED,
	CORONA_INVITE_PLAYERS,
	CORONA_INVITE_FRIENDS,
	CORONA_INVITE_CREWS
};

enum eVPoliceScanner {
	SUSPECT_IN_CUSTODY,
	SUSPECT_DOWN,
	POLICE_SCANNER_CONJUNCTIVES_FOR,
	INSTRUCTIONS_DISPATH_TO,
	POLICE_CAR_NUMBER,
	POLICE_CAR_NAME,
	POLICE_SCANNER_RANDOM_CHAT,
	POLICE_SCANNER_A,
	POLICE_SCANNER_IN,
	POLICE_SCANNER_ON_SHORT,
	POLICE_SCANNER_ON_FOOT,
	POLICE_SCANNER_LAST_SEEN,
	POLICE_SCANNER_SUSPECT,
	POLICE_SCANNER_NEAR_DIR_PERCENTs,
	POLICE_SCANNER_CONJUNCTIVES_NEAR,
	POLICE_SCANNER_CONJUNCTIVES_AT,
	NORTH_OF_UHM,
	EAST_OF_UHM,
	SOUTH_OF_UHM,
	WEST_OF_UHM,
	POLICE_SCANNER_IN_DIRECTION,
	IN_CENTRAL,
	NORTHERN,
	EASTERN,
	SOUTHERN,
	WESTERN,
	NORTH,
	EAST,
	SOUTH,
	WEST,
	PERCENTDOT2i_SCANNER_VOICE_PARAMS,
	POLICE_SCANNER_COLOUR_FUCKED,
	CRIME_AMBIENT_MEDICAL_EVENT,
	CRIME_AMBIENT_FIRE,
	POLICE_SCANNER_ASSISTANCE_REQUIRED_ASSISTANCE_REQUIRED,
};

enum eVEVents {
	CEventShockingCarChase,
	CEventShockingCarCrash,
	CEventShockingBicycleCrash,
	CEventShockingCarPileUp,
	CEventShockingCarOnCar,
	CEventShockingDangerousAnimal,
	CEventShockingDeadBody,
	CEventShockingDrivingOnPavement,
	CEventShockingBicycleOnPavement,
	CEventShockingEngineRevved,
	CEventShockingExplosion,
	CEventShockingFire,
	CEventShockingGunFight,
	CEventShockingGunshotFired,
	CEventShockingHelicopterOverhead,
	CEventShockingParachuterOverhead,
	CEventShockingHornSounded,
	CEventShockingInjuredPed,
	CEventShockingInDangerousVehicle,
	CEventShockingMadDriver,
	CEventShockingMadDriverExtreme,
	CEventShockingMadDriverBicycle,
	CEventShockingMugging,
	CEventShockingPedKnockedIntoByPlayer,
	CEventShockingPedRunOver,
	CEventShockingPedShot,
	CEventShockingPlaneFlyby,
	CEventShockingPotentialBlast,
	CEventShockingPropertyDamage,
	CEventShockingRunningPed,
	CEventShockingRunningStampede,
	CEventShockingSeenCarStolen,
	CEventShockingSeenConfrontation,
	CEventShockingSeenGangFight,
	CEventShockingSeenInsult,
	CEventShockingSeenMeleeAction,
	CEventShockingSeenNiceCar,
	CEventShockingSeenPedKilled,
	CEventShockingSiren,
	CEventShockingCarAlarm,
	CEventShockingStudioBomb,
	CEventShockingVehicleTowed,
	CEventShockingWeaponThreat,
	CEventShockingVisibleWeapon,
	CEventShockingWeirdPed,
	CEventShockingWeirdPedApproaching,
	CEventShockingNonViolentWeaponAimedAt
};

enum eVDTs {
	DT_ArmyVehicle,
	DT_PoliceBoat,
	DT_SwatHelicopter,
	DT_Gangs,
	DT_PoliceAutomobileWaitCruising,
	DT_PoliceAutomobileWaitPulledOver,
	DT_PoliceRoadBlock,
	DT_PoliceVehicleRequest,
	DT_PoliceRiders,
	DT_AmbulanceDepartment,
	DT_SwatAutomobile,
	DT_FireDepartment,
	DT_PoliceHelicopter,
	DT_PoliceAutomobile,
	DT_Invalid
};

enum eVCopSees {
	COP_SEES_WEAPON,
	COP_SEES_GUN,
	COP_SEES_MINI_GUN,
	COP_SEES_GRENADE,
	COP_SEES_GRENADE_LAUNCHER,
	COP_SEES_ROCKET_LAUNCHER
};

enum eVCMS {
	CSM_ST_CLOUDS_DITHER2_LINEAR,
	CSM_ST_CLOUDS_BOX4x4,
	CSM_ST_CLOUDS_BOX3x3,
	CSM_ST_CLOUDS_TWOTAP,
	CSM_ST_CLOUDS_LINEAR,
	CSM_ST_CLOUDS_SIMPLE,
	CSM_ST_HIGHRES_BOX4x4,
	CSM_ST_SOFT16,
	CSM_ST_DITHER16,
	CSM_ST_DITHER4,
	CSM_ST_CUBIC,
	CSM_ST_DITHER2_LINEAR,
	CSM_ST_BOX4x4,
	CSM_ST_BOX3x3,
	CSM_ST_TWOTAP,
	CSM_ST_LINEAR,
	CSM_ST_POINT
};

enum eVDLs {
	DL_BEGIN_DRAW,
	DL_DEBUG,
	DL_MIRROR_REFLECTION,
	DL_RAIN_COLLISION_MAP,
	DL_RAIN_UPDATE,
	DL_PLAYER_SETTINGS,
	DL_PED_DAMAGE_GEN,
	DL_CLOUD_GEN,
	DL_HEIGHT_MAP,
	DL_PREAMBLE,
	DL_FRONTEND,
	DL_HUD,
	DL_PHONE,
	DL_SEETHROUGH_MAP,
	DL_REFLECTION_MAP,
	DL_WATER_SURFACE,
	DL_TREE,
	DL_SCRIPT,
	DL_TIMEBARS,
	DL_PRE_RENDER_VP,
	DL_RADAR,
	DL_LIGHTING
};

enum eVSGStates {
	SG_RPT_SAVES,
	SG_PH_SV_CL_FL,
	SG_PH_LD_CL_FL,
	SG_PH_LS_CL_FL,
	SG_DEL_C_FAIL,
	SG_DEL_FAIL,
	SG_ALD_DAM,
	SG_ALD_SIGN_AGN,
	SG_ALD_SIGNIN,
	SG_VERS_ERR,
	SG_FILENAME_DUP,
	SG_FILENAME_ERR,
	SG_TOOMANYFILES,
	SG_SAVEOVR_SURE,
	SG_SAVE_OVRWRT,
	SG_SAVE_OVRWRT2,
	SG_LOAD_OVRWRT,
	SG_AUTO_OFF,
	SG_AUTOOFF_SURE,
	SG_AUTO_FAILED,
	SG_AUTO_SL_OVR,
	SG_AUTO_SL_OVR2,
	SG_DEV_REM,
	SG_CHKLOAD_FAIL,
	SG_BUFFSIZE_DIF,
	SG_NOT_CREATOR,
	SG_BGNLOAD_FAIL,
	SG_CHKTIME_FAIL,
	SG_BGNTIME_FAIL,
	SG_CHKSAVE_FAIL,
	SG_ENUM_FAILED,
	SG_DEL_LST_FAIL,
	SG_SPCHK_FAILED,
	SG_DEV_SEL_FAIL,
	SG_NO_SPCE_360,
	SG_SPACE_360,
	SG_SEL_DEV_AGN,
	SG_DEVICE_REM,
	SG_DEV_REM_AUTO,
	SG_SGN_SV_RPT_A,
	SG_SIGNIN_AGN,
	SG_SIGNIN_ATSV,
	SG_SGN_SV_RPT,
	SG_SIGNIN_SV,
	SG_SIGNIN
};

enum eVBasicPedTasks {
	GC_COMBAT_TASK,
	GC_LOCAL_PLAYER,
	GC_SITTING,
	GC_WALKING,
	GC_VEHICLE_PASSENGER,
	GC_VEHICLE_DRIVER,
	GC_OBJECT_RIGHT_HAND,
	GC_OBJECT_LEFT_HAND,
	GC_CONVERSATION_HANGOUT, GC_CONVERSATION_PHONE,
	GC_DEFAULT
};

enum eVGameEvents {
	START_PROJECTILE_EVENT,
	SET_LOOK_AT_ENTITY,
	SET_TASK_VEHICLE_TEMP_ACTION,
	REQUEST_CONTROL_EVENT,
	GIVE_CONTROL_EVENT,
	WEAPON_DAMAGE_EVENT,
	REQUEST_PICKUP_EVENT,
	GAME_CLOCK_EVENT,
	GAME_WEATHER_EVENT,
	RESPAWN_PLAYER_PED_EVENT,
	GIVE_WEAPON_EVENT,
	REMOVE_WEAPON_EVENT,
	REMOVE_ALL_WEAPONS_EVENT,
	VEHICLE_COMPONENT_CONTROL_EVENT,
	REQUEST_FIRE_EVENT,
	CONFIRM_FIRE_EVENT,
	ALTER_WANTED_LEVEL_EVENT,
	CHANGE_RADIO_STATION_EVENT,
	RAGDOLL_REQUEST_EVENT,
	PLAYER_TAUNT_EVENT,
	PLAYER_CARD_STAT_EVENT,
	PED_CONVERSATION_LINE_EVENT,
	DOOR_BREAK_EVENT, SCRIPTED_GAME_EVENT,
	REMOTE_SCRIPT_LEAVE_EVENT,
	MARK_AS_NO_LONGER_NEEDED_EVENT,
	SCRIPT_WORLD_STATE_EVENT,
	INCIDENT_ENTITY_EVENT,
	CLEAR_AREA_EVENT,
	REQUEST_NETWORK_SYNCED_SCENE_EVENT,
	START_NETWORK_SYNCED_SCENE_EVENT,
	STOP_NETWORK_SYNCED_SCENE_EVENT,
	UPDATE_NETWORK_SYNCED_SCENE_EVENT,
	GIVE_PED_SCRIPTED_TASK_EVENT,
	CLEAR_PED_TASKS_EVENT,
	START_NETWORK_PED_ARREST_EVENT,
	START_NETWORK_PED_UNCUFF_EVENT,
	NETWORK_CAR_HORN_EVENT,
	NETWORK_ENTITY_AREA_STATUS_EVENT,
	NETWORK_GARAGE_OCCUPIED_STATUS_EVENT,
	SCRIPT_ENTITY_STATE_CHANGE_EVENT,
	PLAY_SOUND_EVENT,
	STOP_SOUND_EVENT,
	BANK_REQUEST_EVENT,
	REQUEST_DOOR_EVENT,
	NETWORK_TRAIN_REQUEST_EVENT,
	NETWORK_TRAIN_REPORT_EVENT,
	MODIFY_VEHICLE_LOCK_WORLD_STATE_DATA_EVENT,
	NETWORK_INCREMENT_STAT_EVENT,
	REQUEST_PHONE_EXPLOSION_EVENT,
	REQUEST_RADIO_STATION_DATA_EVENT,
	KICK_VOTES_EVENT,
	NETWORK_GIVE_PICKUP_REWARD_EVENT,
	NETWORK_CRC_HASH_CHECK_EVENT,
	BLOW_UP_VEHICLE_EVENT,
	NETWORK_SPECIAL_FIRE_EQUIPPED_WEAPON,
	NETWORK_RESPONDED_TO_THREAD_EVENT,
	DESTROYING_EVENT,
	REMOTE_SCRIPT_INFO_EVENT,
	CONVERT_TO_SCRIPT_ENTITY_EVENT,
	SCRIPT_DATA_VERIFY_EVENT,
	REQUEST_MAP_PICKUP_EVENT,
	GIVE_PED_SEQUENCE_TASK_EVENT,
	EXPLOSION_EVENT,
	GIVE_PICKUP_REWARDS_EVENT,
	MODIFY_VEHICLE_LOCK_WORD_STATE_DATA_EVENT,
	NETWORK_BANK_REQUEST_EVENT,
	NETWORK_STOP_SOUND_EVENT,
	NETWORK_PLAY_SOUND_EVENT,
	NETWORK_SOUND_CAR_HORN_EVENT,
	NETWORK_START_PED_UNCUFF_EVENT,
	NETWORK_START_PED_ARREST_EVENT,
	NETWORK_CLEAR_PED_TASKS_EVENT,
	NETWORK_STOP_SYNCED_SCENE_EVENT,
	NETWORK_UPDATE_SYNCED_SCENE_EVENT,
	NETWORK_START_SYNCED_SCENE_EVENT,
	NETWORK_REQUEST_SYNCED_SCENE_EVENT,
	WEATHER_EVENT,
	CLOCK_EVENT,
	SCRIPT_ARRAY_DATA_VERIFY_EVENT
};

enum eVSupportedFormats {
	GSM,
	SD2,
	MPG4,
	MP4,
	MP2,
	MPEG,
	VFW,
	AVI,
	MOV,
	MP3,
	ULW,
	SND,
	AIFC,
	AIFF,
	AIF,
	WAV,
	BIK
};

enum eVThreads {
	THREAD_VOICECHAT_WORKER, // [RAGE] VoiceChat Worker
	THREAD_NETPOOL_1, // [RAGE] netThreadPool 1
	THREAD_NETPOOL_2, // [RAGE] netThreadPool 2
	THREAD_NETTCP_WORKER, // [RAGE] netTcp Worker 
	THREAD_ACHIEVEMENT_WORKER, // [RAGE] rlAchievement Worker 
	THREAD_RENDERTHREAD, // [RAGE] RenderThread 
	THREAD_DVDREADER, // [RAGE] DVD Reader 
	THREAD_HDDREADER, // [RAGE] HDD Reader 
	THREAD_DVDSTREAMER, // [RAGE] DVD Streamer 
	THREAD_HDDSTREAMER, // [RAGE] HDD Streamer
	THREAD_ENUMTHREAD, // [RAGE] EnumThread
	THREAD_FREESPACECHECKTHREAD, // [RAGE] FreeSpaceCheckThread
	THREAD_EXTRASPACECHECKTREADH, // [RAGE] ExtraSpaceCheckThread
	THREAD_SAVETHREAD, // [RAGE] SaveThread
	THREAD_SIZEOFALLSAVESTHREAD, // [RAGE] SizesOfAllSavesThread
	THREAD_LOADTHREAD, // [RAGE] LoadThread
	THREAD_GETSAVEGAMEFILESIZETHREAD, // [RAGE] GetSavegameFileSizeThread
	THREAD_GETSAVEGAMEFILEMODIFEDTIMETHREAD, // [RAGE] GetSavegameFileModifedTimeThread
	THREAD_GETCREATORTHREAD, // [RAGE] GetCreatorThread
	THREAD_DEPENDENCY // [RAGE] Dependency
};

enum eVWantedLevels {
	
};